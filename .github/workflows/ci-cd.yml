name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Run tests
      run: ./gradlew test
    
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: build/reports/tests/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-jar
        path: build/libs/*.jar

  build-docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: app-jar
        path: build/libs/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
    
    - name: Build and push app image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile.app
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/kotlin-rest-api-skeleton:latest
    
    - name: Build and push database image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/kotlin-rest-api-skeleton-db:latest

  deploy:
    needs: build-docker-images
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to production
      run: echo "Deployment would happen here. Configure this step based on your deployment target."
      # Uncomment and configure the deployment steps when ready
      # For example, if deploying to a server via SSH:
      # - name: Deploy to server
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USERNAME }}
      #     key: ${{ secrets.SERVER_SSH_KEY }}
      #     script: |
      #       cd /path/to/deployment
      #       docker-compose pull
      #       docker-compose up -d